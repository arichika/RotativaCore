@model RotativaCore.SampleWebApp._3._0.Models.SwitchesViewModel

@{
    ViewBag.Title = "TestSwitches";
}

<h2>TestSwitches</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>SwitchesViewModel</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.DocTitle)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DocTitle)
            @Html.ValidationMessageFor(model => model.DocTitle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DocContent)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DocContent)
            @Html.ValidationMessageFor(model => model.DocContent)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Filename)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Filename)
            @Html.ValidationMessageFor(model => model.Filename)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PageWidth)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PageWidth)
            @Html.ValidationMessageFor(model => model.PageWidth)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PageHeight)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PageHeight)
            @Html.ValidationMessageFor(model => model.PageHeight)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsLowQuality)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsLowQuality)
            @Html.ValidationMessageFor(model => model.IsLowQuality)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MinimumFontSize)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MinimumFontSize)
            @Html.ValidationMessageFor(model => model.MinimumFontSize)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
